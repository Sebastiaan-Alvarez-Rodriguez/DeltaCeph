/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
//        WARNING: Order is important! Top is searched first!
//        Use The 3 lines below if you compiled arrow dependencies somewhere else, and want to compile against those now.
//        Of course, you will have to provide an *absolute path* to where you have stored these jars on your filesystem.
    flatDir {
        dirs '/home/radon/uni/mrp/precompiled/arrow-5.0.0-SNAPSHOT/11'
    }
    mavenLocal()
    mavenCentral()
}

configurations {
    shipEssential
    shipLight.extendsFrom(shipEssential)
    shipFull.extendsFrom(shipLight)

    implementation.extendsFrom(shipFull)
}

dependencies {
    // Use Scala 2.12 in our library project
    shipFull 'org.scala-lang:scala-library:2.12.10'
    shipFull 'org.scala-lang:scala-reflect:2.12.10'

//      Repository libs for modified v5.0.0 bridge Arrow Dataset JNI
//        shipEssential ('org.apache.arrow:arrow-dataset:5.0.0-SNAPSHOT') {
//            transitive = false
//        }
    shipEssential ('org.apache.arrow:arrow-memory-core:5.0.0-SNAPSHOT') {
        transitive = false
    }
    shipEssential ('org.apache.arrow:arrow-memory-netty:5.0.0-SNAPSHOT') {
        transitive = false
    }
    shipEssential ('org.apache.arrow:arrow-vector:5.0.0-SNAPSHOT') {
        transitive = false
    }
//        Compiled libs in local repository.
    shipEssential name: 'arrow-dataset-5.0.0-SNAPSHOT'

    // Delta Lake dependency
    implementation group: 'io.delta', name: 'delta-core_2.12', version: '0.8.0'

    // Dependencies needed for Spark
    shipFull 'org.apache.spark:spark-core_2.12:3.0.1'
    shipFull 'org.apache.spark:spark-sql_2.12:3.0.1'

    // Spark indirect dependencies
    shipFull 'org.apache.avro:avro:1.8.2'
    shipFull 'org.apache.hadoop:hadoop-common:2.7.4'

    //Even though Spark provides this, we always crash using their version. Better to include it ourselves
    shipEssential 'com.thoughtworks.paranamer:paranamer:2.8'

    // Dependencies we need to write AVRO parquet files
    // It is extremely important to skip adding transitive dependencies in this @aar notation.
    // If we don't, we accidentally add more recent versions of org.apache.parquet:parquet* libraries.
    // Spark is inherently incompatible with this, and has shown in the past it is really finicky with the exact versions:
    // https://github.com/apache/arrow/issues/3491
    // https://issues.apache.org/jira/browse/SPARK-25588
    // Note: This is how they fixed it for Spark itself, too
    shipLight('org.apache.parquet:parquet-avro:1.8.2') {
        transitive = false
    }

}
//dependencies {
//    // Use Scala 2.13 in our library project
//    implementation 'org.scala-lang:scala-library:2.13.3'
//
//    implementation group: 'io.delta', name: 'delta-core_2.12', version: '1.0.0'
//
//
//    // Use Scalatest for testing our library
//    testImplementation 'junit:junit:4.13.1'
//    testImplementation 'org.scalatest:scalatest_2.13:3.2.3'
//    testImplementation 'org.scalatestplus:junit-4-13_2.13:3.2.2.0'
//
//    // Need scala-xml at test runtime
//    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:1.2.0'
//}

application {
    // Define the main class for the application.
    mainClass = 'DeltaCeph.Main'
}
